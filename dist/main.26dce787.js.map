{"version":3,"sources":["main.js"],"names":["hamburger","document","querySelector","navLinks","links","querySelectorAll","window","toggleMenu","$","toggleClass","classList","toggle","form","getElementById","username","email","checkInputs","usernameValue","value","trim","emailValue","setErrorFor","setSuccessFor","isEmail","input","message","formControl","parentElement","small","className","innerText","test","addEventListener","scroll","SmoothScroll","speed"],"mappings":";AAEA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAWF,SAASC,cAAc,cAClCE,EAAQH,SAASI,iBAAiB,iBAIxCC,OAAOC,WAAa,WAElBC,EAAE,SAASC,YAAY,SACvBN,EAASO,UAAUC,OAAO,SAK5B,IAAMC,EAAOX,SAASY,eAAe,QAC/BC,EAAWb,SAASY,eAAe,YACnCE,EAAQd,SAASY,eAAe,SAQtC,SAASG,IAEDC,IAAAA,EAAgBH,EAASI,MAAMC,OAC/BC,EAAaL,EAAMG,MAAMC,OAET,KAAlBF,EACFI,EAAYP,EAAU,4BAEtBQ,EAAcR,GAGG,KAAfM,EACFC,EAAYN,EAAO,yBACTQ,EAAQH,GAGlBE,EAAcP,GAFdM,EAAYN,EAAO,qBAMvB,SAASM,EAAYG,EAAOC,GACpBC,IAAAA,EAAcF,EAAMG,cACpBC,EAAQF,EAAYxB,cAAc,SACxCwB,EAAYG,UAAY,wBACxBD,EAAME,UAAYL,EAGpB,SAASH,EAAcE,GACDA,EAAMG,cACdE,UAAY,0BAG1B,SAASN,EAAQR,GACR,MAAA,yJAAyJgB,KAC9JhB,GAxCJH,EAAKoB,iBAAiB,SAAU,WAG9BhB,MA0CF,IAAMiB,EAAS,IAAIC,aAAa,gBAAiB,CAC/CC,MAAO","file":"main.26dce787.js","sourceRoot":"..\\src","sourcesContent":["//--- Hamburger Menu Animation Script ---//\r\n\r\nconst hamburger = document.querySelector(\".hamburger\");\r\nconst navLinks = document.querySelector(\".menuItems\");\r\nconst links = document.querySelectorAll(\".menuItems li\");\r\n\r\n/// onclick animate and close ///\r\n\r\nwindow.toggleMenu = () => {\r\n  // alert(\"hallo\");\r\n  $(\".icon\").toggleClass(\"close\");\r\n  navLinks.classList.toggle(\"open\");\r\n};\r\n\r\n// form validation client side//\r\n\r\nconst form = document.getElementById(\"form\");\r\nconst username = document.getElementById(\"userName\");\r\nconst email = document.getElementById(\"Email\");\r\n\r\nform.addEventListener(\"submit\", () => {\r\n  // e.preventDefault();\r\n\r\n  checkInputs();\r\n});\r\n\r\nfunction checkInputs() {\r\n  // trim to remove the whitespaces\r\n  const usernameValue = username.value.trim();\r\n  const emailValue = email.value.trim();\r\n\r\n  if (usernameValue === \"\") {\r\n    setErrorFor(username, \"Username cannot be blank\");\r\n  } else {\r\n    setSuccessFor(username);\r\n  }\r\n\r\n  if (emailValue === \"\") {\r\n    setErrorFor(email, \"Email cannot be blank\");\r\n  } else if (!isEmail(emailValue)) {\r\n    setErrorFor(email, \"Not a valid email\");\r\n  } else {\r\n    setSuccessFor(email);\r\n  }\r\n}\r\n\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector(\"small\");\r\n  formControl.className = \"input-container error\";\r\n  small.innerText = message;\r\n}\r\n\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = \"input-container success\";\r\n}\r\n\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n    email\r\n  );\r\n}\r\n\r\n// this is an imported animation for smooth scrolling//\r\nconst scroll = new SmoothScroll(' a[href*=\"#\"]', {\r\n  speed: 1000,\r\n});\r\n"]}