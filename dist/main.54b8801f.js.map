{"version":3,"sources":["main.js"],"names":["hamburger","document","querySelector","navLinks","links","querySelectorAll","window","toggleMenu","$","toggleClass","classList","toggle","modal","getElementById","lis","getElementsByClassName","modalImg","btns","imgId","i","li","img","getElementsByTagName","onclick","evt","style","display","src","id","kodeBtn","liveBtn","console","log","href","length","span","form","username","email","checkInputs","usernameValue","value","trim","emailValue","setErrorFor","setSuccessFor","isEmail","input","message","formControl","parentElement","small","className","innerText","test","addEventListener","scroll","SmoothScroll","speed"],"mappings":";AAEA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAWF,SAASC,cAAc,cAClCE,EAAQH,SAASI,iBAAiB,iBAIxCC,OAAOC,WAAa,WAElBC,EAAE,SAASC,YAAY,SACvBN,EAASO,UAAUC,OAAO,SA6D5B,IAVA,IAAIC,EAAQX,SAASY,eAAe,WAEhCC,EAAMb,SAASc,uBAAuB,gBAEtCC,EAAWf,SAASY,eAAe,SAEnCI,EAAOhB,SAASc,uBAAuB,WAGvCG,EAAQ,GACHC,EAAAA,SAAAA,GACHC,IACAC,EADKP,EAAIK,GACAG,qBAAqB,OAAO,GACzCD,EAAIE,QAAU,SAAUC,GAEtBZ,EAAMa,MAAMC,QAAU,QACtBV,EAASW,IAAMN,EAAIM,IACnBT,EAAQG,EAAIO,GAGZC,QAAU5B,SAASY,eAAe,WAClCiB,QAAU7B,SAASY,eAAe,WAEpB,cAAVK,GACFa,QAAQC,IAAIH,SACZA,QAAQI,KAAO,oDACfH,QAAQG,KAAO,4DACI,SAAVf,GACTW,QAAQI,KAAO,iDACfH,QAAQG,KAAO,mDAEfJ,QAAQI,KAAO,yCACfH,QAAQG,KACN,+EAvBCd,EAAI,EAAGA,EAAIL,EAAIoB,OAAQf,IAAvBA,EAAAA,GA4BT,IAAIgB,EAAOlC,SAASc,uBAAuB,SAAS,GAEpDoB,EAAKZ,QAAU,WACbX,EAAMa,MAAMC,QAAU,QAKxB,IAAMU,EAAOnC,SAASY,eAAe,QAC/BwB,EAAWpC,SAASY,eAAe,YACnCyB,EAAQrC,SAASY,eAAe,SAQtC,SAAS0B,IAEDC,IAAAA,EAAgBH,EAASI,MAAMC,OAC/BC,EAAaL,EAAMG,MAAMC,OAET,KAAlBF,EACFI,EAAYP,EAAU,4BAEtBQ,EAAcR,GAGG,KAAfM,EACFC,EAAYN,EAAO,yBACTQ,EAAQH,GAGlBE,EAAcP,GAFdM,EAAYN,EAAO,qBAMvB,SAASM,EAAYG,EAAOC,GACpBC,IAAAA,EAAcF,EAAMG,cACpBC,EAAQF,EAAY/C,cAAc,SACxC+C,EAAYG,UAAY,wBACxBD,EAAME,UAAYL,EAGpB,SAASH,EAAcE,GACDA,EAAMG,cACdE,UAAY,0BAG1B,SAASN,EAAQR,GACR,MAAA,yJAAyJgB,KAC9JhB,GAxCJF,EAAKmB,iBAAiB,SAAU,WAG9BhB,MA0CF,IAAMiB,EAAS,IAAIC,aAAa,gBAAiB,CAC/CC,MAAO","file":"main.54b8801f.js","sourceRoot":"..\\src","sourcesContent":["//--- Hamburger Menu Animation Script ---//\r\n\r\nconst hamburger = document.querySelector(\".hamburger\");\r\nconst navLinks = document.querySelector(\".menuItems\");\r\nconst links = document.querySelectorAll(\".menuItems li\");\r\n\r\n/// onclick animate and close ///\r\n\r\nwindow.toggleMenu = () => {\r\n  // alert(\"hallo\");\r\n  $(\".icon\").toggleClass(\"close\");\r\n  navLinks.classList.toggle(\"open\");\r\n};\r\n\r\n//---> CAROUSEL FUNCTIONALITY <---//\r\n// let slidePosition = 0;\r\n// const slides = document.getElementsByClassName('carousel__item');\r\n// const totalSlides = slides.length;\r\n\r\n// document.\r\n//   getElementById('carousel__button--next')\r\n//   .addEventListener(\"click\", function() {\r\n//     moveToNextSlide();\r\n//   });\r\n// document.\r\n//   getElementById('carousel__button--prev')\r\n//   .addEventListener(\"click\", function() {\r\n//     moveToPrevSlide();\r\n//   });\r\n\r\n// function updateSlidePosition() {\r\n//   for (let slide of slides) {\r\n//     slide.classList.remove('carousel__item--visible');\r\n//     slide.classList.add('carousel__item--hidden');\r\n//   }\r\n\r\n//   slides[slidePosition].classList.add('carousel__item--visible');\r\n// }\r\n\r\n// function moveToNextSlide() {\r\n//   if (slidePosition === totalSlides - 1) {\r\n//     slidePosition = 0;\r\n//   } else {\r\n//     slidePosition++;\r\n//   }\r\n\r\n//   updateSlidePosition();\r\n// }\r\n\r\n// function moveToPrevSlide() {\r\n//   if (slidePosition === 0) {\r\n//     slidePosition = totalSlides - 1;\r\n//   } else {\r\n//     slidePosition--;\r\n//   }\r\n\r\n//   updateSlidePosition();\r\n// }\r\n\r\n// fullscreen popup on carouselItem click//\r\n\r\n// create references to the modal...\r\nlet modal = document.getElementById(\"myModal\");\r\n// get images\r\nlet lis = document.getElementsByClassName(\"swiper-slide\");\r\n// the image in the modal\r\nlet modalImg = document.getElementById(\"img01\");\r\n// btns under images\r\nlet btns = document.getElementsByClassName(\"imgbtns\");\r\n\r\n// loop through the images with class\r\nlet imgId = \"\";\r\nfor (let i = 0; i < lis.length; i++) {\r\n  let li = lis[i];\r\n  let img = li.getElementsByTagName(\"img\")[0];\r\n  img.onclick = function (evt) {\r\n    // console.log(evt);\r\n    modal.style.display = \"block\";\r\n    modalImg.src = img.src;\r\n    imgId = img.id;\r\n    // console.log(img);\r\n\r\n    kodeBtn = document.getElementById(\"kodeBtn\");\r\n    liveBtn = document.getElementById(\"liveBtn\");\r\n\r\n    if (imgId === \"enigmatic\") {\r\n      console.log(kodeBtn);\r\n      kodeBtn.href = \"https://github.com/Cosmic-Chimp/CSS-Grid-Practise\";\r\n      liveBtn.href = \"https://cosmic-chimp.github.io/CSS-Grid-Practise/#Enigma\";\r\n    } else if (imgId === \"Utan\") {\r\n      kodeBtn.href = \"https://github.com/Cosmic-Chimp/FlexBoxProject\";\r\n      liveBtn.href = \"https://cosmic-chimp.github.io/FlexBoxProject/\";\r\n    } else {\r\n      kodeBtn.href = \"https://github.com/Cosmic-Chimp/CodeAC\";\r\n      liveBtn.href =\r\n        \" https://cosmic-chimp.github.io/CodeAC/number-guesser-starting/index.html\";\r\n    }\r\n  };\r\n}\r\n\r\nlet span = document.getElementsByClassName(\"close\")[0];\r\n\r\nspan.onclick = function () {\r\n  modal.style.display = \"none\";\r\n};\r\n\r\n// form validation client side//\r\n\r\nconst form = document.getElementById(\"form\");\r\nconst username = document.getElementById(\"userName\");\r\nconst email = document.getElementById(\"Email\");\r\n\r\nform.addEventListener(\"submit\", () => {\r\n  // e.preventDefault();\r\n\r\n  checkInputs();\r\n});\r\n\r\nfunction checkInputs() {\r\n  // trim to remove the whitespaces\r\n  const usernameValue = username.value.trim();\r\n  const emailValue = email.value.trim();\r\n\r\n  if (usernameValue === \"\") {\r\n    setErrorFor(username, \"Username cannot be blank\");\r\n  } else {\r\n    setSuccessFor(username);\r\n  }\r\n\r\n  if (emailValue === \"\") {\r\n    setErrorFor(email, \"Email cannot be blank\");\r\n  } else if (!isEmail(emailValue)) {\r\n    setErrorFor(email, \"Not a valid email\");\r\n  } else {\r\n    setSuccessFor(email);\r\n  }\r\n}\r\n\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector(\"small\");\r\n  formControl.className = \"input-container error\";\r\n  small.innerText = message;\r\n}\r\n\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = \"input-container success\";\r\n}\r\n\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n    email\r\n  );\r\n}\r\n\r\n// this is an imported animation for smooth scrolling//\r\nconst scroll = new SmoothScroll(' a[href*=\"#\"]', {\r\n  speed: 1000,\r\n});\r\n"]}